<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>NET on 闲碎</title>
    <link>https://hxxxer.github.io/tags/net/</link>
    <description>Recent content in NET on 闲碎</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <copyright>This is a customized copyright.</copyright>
    <lastBuildDate>Fri, 08 Nov 2024 01:53:42 +0800</lastBuildDate>
    <atom:link href="https://hxxxer.github.io/tags/net/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>NET使用Github Actions</title>
      <link>https://hxxxer.github.io/net%E4%BD%BF%E7%94%A8github-actions/</link>
      <pubDate>Fri, 08 Nov 2024 01:53:42 +0800</pubDate>
      <guid>https://hxxxer.github.io/net%E4%BD%BF%E7%94%A8github-actions/</guid>
      <description>&lt;p&gt;&lt;strong&gt;最后编辑于2024年11月08日&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;前言&#34;&gt;前言&lt;/h1&gt;&#xA;&lt;p&gt;早就知道GitHub actions很方便好用，所以我想搞一个。不过遇到了好多困难，现在基本搞定了，记录一下。&lt;/p&gt;&#xA;&lt;p&gt;主要的难点是yml文件的编写，毕竟是第一次接触，脑子有点混。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;新建工作流&#34;&gt;新建工作流&lt;/h1&gt;&#xA;&lt;p&gt;就直接在actions里面新建就行，GitHub有net desktop模板。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;yml文件的理解&#34;&gt;yml文件的理解&lt;/h1&gt;&#xA;&lt;p&gt;开头的on是指当发生什么的时候开始这条工作流，比如：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;on&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;push&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;tags&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;      &lt;/span&gt;- v*&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;就是在push且tag是以v开头时启动。注意push内的每个条件是或关系，只要满足一个就开始工作。&lt;/p&gt;&#xA;&lt;p&gt;然后就是具体工作内容，是一种多级列表，每一级都可以有多个。&lt;/p&gt;&#xA;&lt;p&gt;其实工作流程就是大概按顺序运行steps，这里大概是：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;启动系统&lt;/li&gt;&#xA;&lt;li&gt;拉取仓库&lt;/li&gt;&#xA;&lt;li&gt;安装net core&lt;/li&gt;&#xA;&lt;li&gt;net项目初始化依赖&lt;/li&gt;&#xA;&lt;li&gt;构建release版本&lt;/li&gt;&#xA;&lt;li&gt;压缩成zip&lt;/li&gt;&#xA;&lt;li&gt;发布到release&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;感觉就像自动执行指令。&lt;/p&gt;&#xA;&lt;h2 id=&#34;steps属性理解&#34;&gt;steps属性理解&lt;/h2&gt;&#xA;&lt;p&gt;最末级就是steps，里面的属性有：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;name&lt;/strong&gt;，就是名字。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;id&lt;/strong&gt;，非必要，其它地方引用时候用。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;uses&lt;/strong&gt;，可以选择GitHub上现有的操作，比如获取仓库内容、安装net vore。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;with&lt;/strong&gt;，一般是使用uses时配置具体的参数，比如安装net core时指定版本。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;run&lt;/strong&gt;，就是执行指令，不同平台（win，Ubuntu）使用的不同&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;env&lt;/strong&gt;，一些变量，通过$env:&amp;lt;名字&amp;gt;，来引用。（好像在一些字符串里面不能被正确解析），比如：&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;run&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;|&lt;span style=&#34;color:#cd5555&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;    $zipFilePath = &amp;#34;${{ github.workspace }}\$env:&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;发布到release&#34;&gt;发布到release&lt;/h2&gt;&#xA;&lt;p&gt;这边是重点，我是先搞了一个给这个action用的token，然后再在yml文件里面设定steps。&lt;/p&gt;&#xA;&lt;h3 id=&#34;token&#34;&gt;TOKEN&lt;/h3&gt;&#xA;&lt;h4 id=&#34;新建token&#34;&gt;新建TOKEN&lt;/h4&gt;&#xA;&lt;p&gt;在头像 - &lt;strong&gt;setting&lt;/strong&gt; - 侧边栏的&lt;strong&gt;Developer Settings&lt;/strong&gt; - 侧边栏的&lt;strong&gt;Personal accesskey tokens&lt;/strong&gt; - &lt;strong&gt;Token (classic)&lt;/strong&gt;。然后&lt;strong&gt;generate new token&lt;/strong&gt; - &lt;strong&gt;Generate new token (classic)&lt;/strong&gt;。然后输密码之后，来到新建token的页面，名字随便起，过期时间随便，下面是&lt;strong&gt;Select scopes&lt;/strong&gt;选择前三个。&#xA;**&#xA;新建完成之后记得复制token，因为只会出现一次，后面要用。&lt;/p&gt;</description>
    </item>
    <item>
      <title>VS NET开发桌面程序的一些小经验</title>
      <link>https://hxxxer.github.io/20241105net%E7%A8%8B%E5%BA%8F/</link>
      <pubDate>Tue, 05 Nov 2024 22:15:00 +0800</pubDate>
      <guid>https://hxxxer.github.io/20241105net%E7%A8%8B%E5%BA%8F/</guid>
      <description>&lt;p&gt;&lt;strong&gt;最后编辑于2024年11月05日&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;前言&#34;&gt;前言&lt;/h1&gt;&#xA;&lt;p&gt;这篇博客就是记录一些提醒自己（包括未来的自己😋）的tips&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;控件改name事件重新绑定&#34;&gt;控件改(Name)，事件重新绑定&lt;/h1&gt;&#xA;&lt;p&gt;如上。以按钮为例，新建了一个button1，然后还没改名，不小心双击了，结果就直接新建Click事件了，这时候再改名的话，&lt;code&gt;form1.cs&lt;/code&gt;里面Click事件还是&lt;code&gt;button1_Click&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;p&gt;结论就是直接改成改名之后的事件名，这时候设计器肯定变成空白了，然后打开随便一个控件或者窗口，什么都行，的属性页，然后选到改动的那个按钮，更改Click事件的绑定函数就行。&lt;/p&gt;&#xA;&lt;p&gt;如果设计器还是空白，那就关闭设计器，再打开，根据设计器的报错去设计文件里面更改事件绑定的函数就行。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://hxxxer.github.io/images/%E6%9B%B4%E6%94%B9%E4%BA%8B%E4%BB%B6%E7%BB%91%E5%AE%9A%E5%87%BD%E6%95%B0.png&#34; alt=&#34;更改事件绑定函数&#34;&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;参考&lt;/p&gt;&#xA;&lt;hr&gt;</description>
    </item>
    <item>
      <title>使用.NET开发hugo小程序</title>
      <link>https://hxxxer.github.io/20241105015218/</link>
      <pubDate>Tue, 05 Nov 2024 01:52:20 +0800</pubDate>
      <guid>https://hxxxer.github.io/20241105015218/</guid>
      <description>&lt;p&gt;&lt;strong&gt;最后编辑于2024年11月07日&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;前言&#34;&gt;前言&lt;/h1&gt;&#xA;&lt;p&gt;因为使用hugo时，有几个很常用的指令，比如&lt;code&gt;hugo server&lt;/code&gt;之类的，但是去文件夹、然后打开ps7、再执行命令，这套流程实在是太麻烦了，所以我就想搞一个exe，把常用的功能都搞进去。&lt;/p&gt;&#xA;&lt;p&gt;项目地址&lt;a href=&#34;https://github.com/hxxxer/HugoHelper&#34;&gt;HugoHelper&lt;/a&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;常用命令&#34;&gt;常用命令&lt;/h1&gt;&#xA;&lt;p&gt;这段其实是为了防止我忘了而写了😋。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# 切环境&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Set-Location -Path &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;D:\Tools\hugot\BST&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# 生成可以上传到github的网页文件&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo --contentDir &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;C:\Users\15641\Documents\Blog&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# 运行本地测试服务&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo server --port &lt;span style=&#34;color:#b452cd&#34;&gt;6138&lt;/span&gt; --contentDir &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;C:\Users\15641\Documents\Blog&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# 创建新博客&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo new content (&lt;span style=&#34;color:#00688b&#34;&gt;$fileName&lt;/span&gt; + &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;.md&amp;#34;&lt;/span&gt;) --contentDir &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;C:\Users\15641\Documents\Blog&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# 清理垃圾&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo --cleanDestinationDir  --contentDir &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;C:\Users\15641\Documents\Blog&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;注意！&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;刚运行玩本地服务不能马上&lt;code&gt;git add .&lt;/code&gt;，因为此时那些html的指向还是localhost😓，这时候上传就搞笑了。要&lt;code&gt;hugo&lt;/code&gt;一下才行。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;开发进程&#34;&gt;开发进程&lt;/h1&gt;&#xA;&lt;h2 id=&#34;配置vs开发环境&#34;&gt;配置VS开发环境&lt;/h2&gt;&#xA;&lt;p&gt;其实直接在选择新项目里面就有可以添加新环境的地方，安装就行。&lt;/p&gt;&#xA;&lt;p&gt;安装之后，新建一个.NET项目，然后就会看到一个设计用的窗口，这时候摁&lt;code&gt;Ctrl+Alt+X&lt;/code&gt;打开工具箱，拖一个Botton出来。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://hxxxer.github.io/images/NET%E5%B7%A5%E5%85%B7%E7%AE%B1.png&#34; alt=&#34;VS .NET工具箱&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;右键按钮 - 属性，可以修改(Name)，这个(Name)是程序用的，好像只能字母数字。而后面那个Text才是我看到的按钮文本。&lt;/p&gt;&#xA;&lt;p&gt;窗口的属性里面还能更改图标，就在那个Icon里面选一个ico文件就行。&lt;/p&gt;&#xA;&lt;h2 id=&#34;创建新blog按钮&#34;&gt;“创建新Blog”按钮&lt;/h2&gt;&#xA;&lt;p&gt;基本思路就是新开一个ps7进程，然后输入指令，或者在启动的时候用&lt;code&gt;-Command&lt;/code&gt;来实现带命令启动。&lt;/p&gt;&#xA;&lt;p&gt;我一开始就是直接将ps1脚本里面的内容搬到代码里，脚本内容是通过&lt;code&gt;--fileName&lt;/code&gt;来实现文件名的传递，但是如果直接照搬到&lt;code&gt;-Command&lt;/code&gt;之后，无论我怎么搞都不能实现正常的文件名传递。&lt;/p&gt;&#xA;&lt;p&gt;然后我就用直接执行脚本 + 传递参数的方式，执行很完美，但是感觉代码太WET😅，放弃。&lt;/p&gt;&#xA;&lt;p&gt;&lt;del&gt;最后我就是通过新开一个无窗口ps7进程，重定向输入输出，然后通过&lt;code&gt;streamWriter.WriteLine&lt;/code&gt;，&lt;strong&gt;一行行&lt;/strong&gt;地输入到ps7&lt;/del&gt;&lt;/p&gt;&#xA;&lt;p&gt;最新的是新开了一个创建blog窗口，这样就可以自由输入文件名了，原来是硬编码以当前时间为文件名。&lt;/p&gt;&#xA;&lt;h2 id=&#34;一些简单的按钮&#34;&gt;一些简单的按钮&lt;/h2&gt;&#xA;&lt;p&gt;就是一些在点击事件内就能完全执行的按钮，包括开启Server、构建网页、清理垃圾。&lt;/p&gt;&#xA;&lt;p&gt;开启Server我想看到ps窗口，就简单设定了一下ps进程设定：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RedirectStandardInput = &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;true&lt;/span&gt;, &lt;span style=&#34;color:#228b22&#34;&gt;// 重定向标准输入&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RedirectStandardOutput = &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;false&lt;/span&gt;, &lt;span style=&#34;color:#228b22&#34;&gt;// 重定向标准输出&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;UseShellExecute = &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;false&lt;/span&gt;, &lt;span style=&#34;color:#228b22&#34;&gt;// 不使用系统外壳程序启动&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CreateNoWindow = &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;false&lt;/span&gt; &lt;span style=&#34;color:#228b22&#34;&gt;// 创建窗口&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;git窗口&#34;&gt;Git窗口&lt;/h2&gt;&#xA;&lt;p&gt;&lt;del&gt;我是想将Git操作也写在窗口里，但是目前还没搞定。&lt;/del&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
