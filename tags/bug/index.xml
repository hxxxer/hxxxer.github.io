<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bug on 闲碎</title>
    <link>https://hxxxer.github.io/tags/bug/</link>
    <description>Recent content in Bug on 闲碎</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <copyright>This is a customized copyright.</copyright>
    <lastBuildDate>Sun, 19 Jan 2025 17:32:47 +0800</lastBuildDate>
    <atom:link href="https://hxxxer.github.io/tags/bug/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>WPF中使用ctrl多选的bug</title>
      <link>https://hxxxer.github.io/wpf%E4%B8%AD%E4%BD%BF%E7%94%A8ctrl%E5%A4%9A%E9%80%89%E7%9A%84bug/</link>
      <pubDate>Sun, 19 Jan 2025 17:32:47 +0800</pubDate>
      <guid>https://hxxxer.github.io/wpf%E4%B8%AD%E4%BD%BF%E7%94%A8ctrl%E5%A4%9A%E9%80%89%E7%9A%84bug/</guid>
      <description>&lt;p&gt;&lt;strong&gt;最后编辑于2025年01月19日&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;前言&#34;&gt;前言&lt;/h1&gt;&#xA;&lt;p&gt;好久没写blog了，近期挺忙的。&lt;/p&gt;&#xA;&lt;p&gt;这次是在尝试在C#下的另一个桌面开发框架WPF中开发一个小程序时，遇到的一个小bug，纯纯是我自己没理解Preview事件导致的。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;背景知识记录&#34;&gt;背景知识记录&lt;/h1&gt;&#xA;&lt;p&gt;Drag-and-drop操作过程中，会由一系列事件Event组成，这些Event有两种模型，一个是冒泡Bubbling，一个是隧道Tunnelling（带Preview前缀的）。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Bubbling的event是动作发生后触发；Tunnelling的event是动作发生前触发。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;冒泡事件&#34;&gt;冒泡事件&lt;/h2&gt;&#xA;&lt;p&gt;从最具体的子元素开始，逐层向上冒泡到父元素。如果子元素处理了事件并设置了 e.Handled = true，则父元素不会接收到该事件。&lt;/p&gt;&#xA;&lt;h2 id=&#34;隧道事件&#34;&gt;隧道事件&lt;/h2&gt;&#xA;&lt;p&gt;从最不具体的父元素开始，逐层向下传递到子元素。如果父元素处理了事件并设置了 e.Handled = true，则子元素不会接收到该事件。&lt;/p&gt;&#xA;&lt;h1 id=&#34;bug场景复现&#34;&gt;bug场景复现&lt;/h1&gt;&#xA;&lt;p&gt;我在一个ListBox里面设置了Extended多选，即可以通过按住ctrl来实现多选，这个多选事件是发生在我自己的PreviewMouseLeftButtonDown事件之后的（但是不清除它是冒泡还是隧道事件）。而我的PreviewMouseLeftButtonDown事件里面设定了如下代码：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;// 选中当前项&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;listBoxItem.IsSelected = &lt;span style=&#34;color:#ef9f76&#34;&gt;true&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;e.Handled = &lt;span style=&#34;color:#ef9f76&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当时拖动文件的代码是写在PreviewMouseLeftButtonDown事件里面的，而拖动文件的操作是阻塞的。我这样写是为了在拖动子项时，子项能变成选中状态。&lt;/p&gt;&#xA;&lt;p&gt;然后我就发现按住ctrl无法使已选中的项变成未选中。想了一下，应该是因为&lt;code&gt;e.Handled = true&lt;/code&gt;，使得接下来按住ctrl选择没有接收到点击事件，但是当我删除&lt;code&gt;e.Handled = true&lt;/code&gt;之后，依然存在bug：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;按住ctrl可以使已选中的项变成未选中&lt;/li&gt;&#xA;&lt;li&gt;但是按住ctrl无法使未选中的项变成已选中&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;bug原因&#34;&gt;bug原因&lt;/h1&gt;&#xA;&lt;p&gt;后来经过我的分析之后，得出了原因：&lt;code&gt;listBoxItem.IsSelected = true&lt;/code&gt;和ctrl多选依次发生，导致出现bug。这个过程可以如下描述：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;点击之后，&lt;code&gt;listBoxItem.IsSelected = true&lt;/code&gt;正常发生，这时子项被选中。&lt;/li&gt;&#xA;&lt;li&gt;当PreviewMouseLeftButtonDown事件结束之后，ctrl多选发生，它会改变子项的选中状态，可以理解为进行了非操作。&lt;/li&gt;&#xA;&lt;li&gt;最后子项的选中状态是&lt;code&gt;false&lt;/code&gt;。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;所以ctrl多选就只能使子项变成非选中状态。&lt;/p&gt;&#xA;&lt;h1 id=&#34;解决方法&#34;&gt;解决方法&lt;/h1&gt;&#xA;&lt;p&gt;解决也很简单，只需要将拖动文件的代码转移到MouseMove事件里面，并删除上面的两行代码即可。&lt;/p&gt;&#xA;&lt;p&gt;因为拖动文件的代码在MouseMove事件里面，所以PreviewMouseLeftButtonDown事件不再会阻塞ctrl多选的事件，这样ctrl多选的各种行为也能正常发生了。&lt;/p&gt;&#xA;&lt;h1 id=&#34;最后总结&#34;&gt;最后总结&lt;/h1&gt;&#xA;&lt;p&gt;Preview事件里面不要放一些会阻塞的代码，最好只放一些检查、记录的代码。我这里就改成记录选中项和鼠标位置了。&lt;/p&gt;&#xA;&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;&#xA;&lt;hr&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/mqxs/p/7534730.html&#34;&gt;【WPF】鼠标拖拽功能DragOver和Drop&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/lesliexin/p/16073879.html&#34;&gt;（原创）[C#] 一步一步自定义拖拽（Drag&amp;amp;Drop）时的鼠标效果：（一）基本原理及基本实现&#xA;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://kimi.moonshot.cn/&#34;&gt;Kimi&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
  </channel>
</rss>
