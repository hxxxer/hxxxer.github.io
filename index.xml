<?xml-stylesheet href="/rss.xsl" type="text/xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>闲碎</title>
    <link>https://hxxxer.github.io/</link>
    <description>Recent content on 闲碎</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>This is a customized copyright.</copyright>
    <lastBuildDate>Mon, 11 Nov 2024 00:29:13 +0800</lastBuildDate>
    
        <atom:link href="https://hxxxer.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>C#调用DLL的方法</title>
        <link>https://hxxxer.github.io/c%23%E8%B0%83%E7%94%A8dll%E7%9A%84%E6%96%B9%E6%B3%95/</link>
        <pubDate>Mon, 11 Nov 2024 00:29:13 +0800</pubDate>
        
        <guid>https://hxxxer.github.io/c%23%E8%B0%83%E7%94%A8dll%E7%9A%84%E6%96%B9%E6%B3%95/</guid>
        <description>闲碎 https://hxxxer.github.io/c%23%E8%B0%83%E7%94%A8dll%E7%9A%84%E6%96%B9%E6%B3%95/ -&lt;p&gt;&lt;strong&gt;最后编辑于2024年11月11日&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;前言&#34;&gt;前言&lt;/h1&gt;
&lt;p&gt;之前需要调用dll里面的图标，而调用的函数用的是一个dll的内部的函数，所以这里记录一下调用的两种方法。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;vs的项目引用&#34;&gt;VS的项目引用&lt;/h1&gt;
&lt;p&gt;在VS的方案资源管理器里面（&lt;code&gt;Ctrl+Alt+L&lt;/code&gt;），右键依赖项 - 添加项目引用，然后选择dll文件，例如AddDll.dll（里面有一个ADD类，ADD里面有一个calculate公共方法）。&lt;/p&gt;
&lt;p&gt;之后就可以在依赖项 - 程序集里面看到Add了。&lt;/p&gt;
&lt;p&gt;调用也很简单：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ca9ee6&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;AddDll&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;AddDll.ADD &lt;span style=&#34;color:#ca9ee6&#34;&gt;add&lt;/span&gt; = &lt;span style=&#34;color:#ca9ee6&#34;&gt;new&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e78284&#34;&gt;int&lt;/span&gt; c = &lt;span style=&#34;color:#ca9ee6&#34;&gt;add&lt;/span&gt;.calculate(a,b);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h1 id=&#34;使用dllimport&#34;&gt;使用DllImport&lt;/h1&gt;
&lt;p&gt;在需要引用的函数的上一行添加&lt;code&gt;[DllImport(&amp;quot;user.dll&amp;quot;, ......)]&lt;/code&gt;就行，下面是我调用的获取dll图标函数：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8caaee&#34;&gt;[DllImport(&amp;#34;shell32.dll&amp;#34;, CharSet = CharSet.Auto)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e78284&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#e78284&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#e78284&#34;&gt;extern&lt;/span&gt; IntPtr ExtractIcon(IntPtr hInst, &lt;span style=&#34;color:#e78284&#34;&gt;string&lt;/span&gt; lpszExeFileName, &lt;span style=&#34;color:#e78284&#34;&gt;int&lt;/span&gt; nIconIndex);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;后面那个&lt;code&gt;CharSet = CharSet.Auto&lt;/code&gt;是调用字符集，Auto是自动选择合适的。&lt;/p&gt;
&lt;p&gt;下面函数的定义记得加&lt;code&gt;static extern&lt;/code&gt;，以表示这个是一个外部方法实现，它将在运行时解析到指定的非托管代码。&lt;/p&gt;
&lt;p&gt;这个方法需要知道dll内部的函数及其形参。&lt;/p&gt;
&lt;h2 id=&#34;补充其它的dllimportattribute属性&#34;&gt;补充其它的DllImportAttribute属性&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;EntryPoint=&amp;quot;MessageBoxA&amp;quot;&lt;/code&gt;，这个可以也指定函数，这样下面的函数引用就可以用别的名字，但是注意这个EntryPoint赋值和下面的函数引用不一定相同，比如上面的&lt;code&gt;ExtractIcon&lt;/code&gt;，在EntryPoint里面应该是&lt;code&gt;ExtractIconW&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ExactSpelling&lt;/code&gt; 指示 &lt;code&gt;EntryPoint&lt;/code&gt; 是否必须与指示的入口点的拼写完全匹配，如：&lt;code&gt;ExactSpelling=false&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PreserveSig&lt;/code&gt;指示方法的签名应当被保留还是被转换， 如：&lt;code&gt;PreserveSig=true&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SetLastError&lt;/code&gt; 指示方法是否保留 Win32&amp;quot;上一错误&amp;quot;，如：&lt;code&gt;SetLastError=true&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CallingConvention&lt;/code&gt;指示入口点的调用约定， 如：&lt;code&gt;CallingConvention=CallingConvention.Winapi&lt;/code&gt;；&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/Im-Victor/p/14708695.html&#34;&gt;C#调用DLL的几种方法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/wangnaisheng/article/details/142462074&#34;&gt;【C#】DllImport的使用&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qq_43069920/article/details/123100601&#34;&gt;VS2022 C#编写DLL和调用外部DLL中的方法&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
- https://hxxxer.github.io/c%23%E8%B0%83%E7%94%A8dll%E7%9A%84%E6%96%B9%E6%B3%95/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>Linux压缩不包含绝对路径命令</title>
        <link>https://hxxxer.github.io/linux%E5%8E%8B%E7%BC%A9%E4%B8%8D%E5%8C%85%E5%90%AB%E7%BB%9D%E5%AF%B9%E8%B7%AF%E5%BE%84%E5%91%BD%E4%BB%A4/</link>
        <pubDate>Mon, 11 Nov 2024 00:16:42 +0800</pubDate>
        
        <guid>https://hxxxer.github.io/linux%E5%8E%8B%E7%BC%A9%E4%B8%8D%E5%8C%85%E5%90%AB%E7%BB%9D%E5%AF%B9%E8%B7%AF%E5%BE%84%E5%91%BD%E4%BB%A4/</guid>
        <description>闲碎 https://hxxxer.github.io/linux%E5%8E%8B%E7%BC%A9%E4%B8%8D%E5%8C%85%E5%90%AB%E7%BB%9D%E5%AF%B9%E8%B7%AF%E5%BE%84%E5%91%BD%E4%BB%A4/ -&lt;p&gt;&lt;strong&gt;最后编辑于2024年11月11日&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;前言&#34;&gt;前言&lt;/h1&gt;
&lt;p&gt;在GitHub actions自动发布的时候，需要使用&lt;code&gt;zip&lt;/code&gt;命令来压缩发布文件，但是会连带很多上级目录一起压缩，需要去除这些目录。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;操作&#34;&gt;操作&lt;/h1&gt;
&lt;p&gt;原来的命令是这样的：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;zip -r ShortcutVisualizer.zip ./ShortcutVisualizer/bin/Release/net6.0-windows/win-x64/publish
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这样在压缩出来的时候就会带上&lt;code&gt;ShortcutVisualizer/bin/Release/net6.0-windows/win-x64/publish/&lt;/code&gt;这些无关的文件夹。&lt;/p&gt;
&lt;p&gt;想要去除只需要将&lt;code&gt;-r&lt;/code&gt;更改为&lt;code&gt;-rj&lt;/code&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;补充&#34;&gt;补充&lt;/h1&gt;
&lt;p&gt;使用tar命令压缩的话，只需要在末尾使用-C指定文件所在目录就行，其本质是切换工作目录，来达到工作目录之前的文件夹不压缩的目的。&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/iamfy/archive/2012/11/10/2764307.html&#34;&gt;Linux下压缩不包含路径信息的压缩包&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/azureology/p/13217461.html&#34;&gt;Shell创建zip文件不包含完整路径方法&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
- https://hxxxer.github.io/linux%E5%8E%8B%E7%BC%A9%E4%B8%8D%E5%8C%85%E5%90%AB%E7%BB%9D%E5%AF%B9%E8%B7%AF%E5%BE%84%E5%91%BD%E4%BB%A4/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>编译mini2440的虚拟字符驱动</title>
        <link>https://hxxxer.github.io/%E7%BC%96%E8%AF%91mini2440%E7%9A%84%E8%99%9A%E6%8B%9F%E5%AD%97%E7%AC%A6%E9%A9%B1%E5%8A%A8/</link>
        <pubDate>Sun, 10 Nov 2024 01:36:15 +0800</pubDate>
        
        <guid>https://hxxxer.github.io/%E7%BC%96%E8%AF%91mini2440%E7%9A%84%E8%99%9A%E6%8B%9F%E5%AD%97%E7%AC%A6%E9%A9%B1%E5%8A%A8/</guid>
        <description>闲碎 https://hxxxer.github.io/%E7%BC%96%E8%AF%91mini2440%E7%9A%84%E8%99%9A%E6%8B%9F%E5%AD%97%E7%AC%A6%E9%A9%B1%E5%8A%A8/ -&lt;p&gt;&lt;strong&gt;最后编辑于2024年11月10日&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;前言&#34;&gt;前言&lt;/h1&gt;
&lt;p&gt;嵌入式的第四次实验是编译一个虚拟字符驱动模块，我在学校电脑上可以编译成适合x86架构的版本，但是编译成开发板上的arm架构的就不行。&lt;/p&gt;
&lt;p&gt;后来在自己的电脑上尝试了一下，在一些参考资料的帮助下，最终完成既定目标。现在记录一下。&lt;/p&gt;
&lt;p&gt;虚拟机平台VBox，Ubuntu22.04。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;配置编译环境&#34;&gt;配置编译环境&lt;/h1&gt;
&lt;p&gt;将资料里面的开发板linux源码&lt;code&gt;\FriendlyARM-2440-DVD\Linux\linux-2.6.32.2-mini2440-20150709.tgz&lt;/code&gt;解压到虚拟机。&lt;/p&gt;
&lt;p&gt;然后在解压目录下，将&lt;code&gt;mini2440_config_t35&lt;/code&gt;复制为&lt;code&gt;.config&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp mini2440_config_t35 .config
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后执行下面的命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make oldconfig &lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; make prepare
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://hxxxer.github.io/images/make-oldconfig-prepare.png&#34; alt=&#34;执行make oldconfig &amp;amp;&amp;amp; make prepare&#34;&gt;&lt;/p&gt;
&lt;p&gt;LCD就选择&lt;code&gt;6. 3.5 inch 240X230 Toppoly LCD (FB_S3C2410_T240320)&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hxxxer.github.io/images/LCDSelect.png&#34; alt=&#34;LCD Select&#34;&gt;&lt;/p&gt;
&lt;p&gt;执行过程中如果出现有关&lt;code&gt;arm-linux-gcc&lt;/code&gt;的报错，就去检测一下&lt;code&gt;arm-linux-gcc -v&lt;/code&gt;有没有输出，没有就配置一下。&lt;/p&gt;
&lt;p&gt;执行完成之后，再输入以下命令（这里有些报错是没问题的，只要都是warning就行）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make scripts
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://hxxxer.github.io/images/make-scripts.png&#34; alt=&#34;make scripts&#34;&gt;&lt;/p&gt;
&lt;p&gt;执行完成就配置好了编译环境。&lt;/p&gt;
&lt;h2 id=&#34;解释&#34;&gt;解释&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;mini2440_config_t35&lt;/code&gt;就是适合开发板屏幕的那个config文件，其实里面的&lt;code&gt;mini2440_config_&lt;/code&gt;文件内容都相差不大，只有屏幕相关部分有差别。&lt;/p&gt;
&lt;p&gt;将其复制为&lt;code&gt;.config&lt;/code&gt;文件是为了设置内核配置信息，确保编译环境与开发板的实际情况相匹配。（其实这段话我是问AI的，我也不是很懂）&lt;/p&gt;
&lt;p&gt;&lt;code&gt;make oldconfig&lt;/code&gt;是为了查看是否有新的配置信息要处理，这里感觉没有什么用，但是网上都做了这个😋。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;make prepare&lt;/code&gt;是为了准备之后编译要用到的文件和符号链接，以及处理一些依赖关系，以确保所需的工具和资源都已准备好。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;make scripts&lt;/code&gt;是为了编译一些之后编译要用到的脚本文件。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;更改驱动源码&#34;&gt;更改驱动源码&lt;/h1&gt;
&lt;p&gt;原来的源码&lt;code&gt;chrdevbase.c&lt;/code&gt;有些问题，头文件的引用并不对，需要改成下面的：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#737994;font-weight:bold;font-style:italic&#34;&gt;&amp;lt;linux/kernel.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#737994;font-weight:bold;font-style:italic&#34;&gt;&amp;lt;linux/fs.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#737994;font-weight:bold;font-style:italic&#34;&gt;&amp;lt;linux/init.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#737994;font-weight:bold;font-style:italic&#34;&gt;&amp;lt;linux/module.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#737994;font-weight:bold;font-style:italic&#34;&gt;&amp;lt;linux/uaccess.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里的引用我是复制老师发的&lt;a href=&#34;https://blog.csdn.net/weixin_46829095/article/details/128768229&#34;&gt;那篇CSDN博客&lt;/a&gt;的。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;更改makefiletxt&#34;&gt;更改makefile.txt&lt;/h1&gt;
&lt;p&gt;这个文件内容也有些问题，改成下面的就行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-makefile&#34; data-lang=&#34;makefile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;KERNELDIR&lt;/span&gt; &lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;:=&lt;/span&gt; /home/hx/linux/mini2440-lib/linux-2.6.32.2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;ENV&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;ARCH&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;=&lt;/span&gt;arm &lt;span style=&#34;color:#f2d5cf&#34;&gt;CROSS_COMPILE&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;=&lt;/span&gt;arm-none-linux-gnueabi-
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;obj-m&lt;/span&gt; &lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;:=&lt;/span&gt; chrdevbase.o
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8caaee&#34;&gt;all&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#ca9ee6&#34;&gt;$(&lt;/span&gt;MAKE&lt;span style=&#34;color:#ca9ee6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ca9ee6&#34;&gt;$(&lt;/span&gt;ENV&lt;span style=&#34;color:#ca9ee6&#34;&gt;)&lt;/span&gt; -C &lt;span style=&#34;color:#ca9ee6&#34;&gt;$(&lt;/span&gt;KERNELDIR&lt;span style=&#34;color:#ca9ee6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;M&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ca9ee6&#34;&gt;$(&lt;/span&gt;shell &lt;span style=&#34;color:#99d1db&#34;&gt;pwd&lt;/span&gt;&lt;span style=&#34;color:#ca9ee6&#34;&gt;)&lt;/span&gt; modules
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8caaee&#34;&gt;clean&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#ca9ee6&#34;&gt;$(&lt;/span&gt;MAKE&lt;span style=&#34;color:#ca9ee6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ca9ee6&#34;&gt;$(&lt;/span&gt;ENV&lt;span style=&#34;color:#ca9ee6&#34;&gt;)&lt;/span&gt; -C &lt;span style=&#34;color:#ca9ee6&#34;&gt;$(&lt;/span&gt;KERNELDIR&lt;span style=&#34;color:#ca9ee6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;M&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ca9ee6&#34;&gt;$(&lt;/span&gt;shell &lt;span style=&#34;color:#99d1db&#34;&gt;pwd&lt;/span&gt;&lt;span style=&#34;color:#ca9ee6&#34;&gt;)&lt;/span&gt; clean
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;而且文件名也要改成Makefile，注意一定要大写M开头。&lt;/p&gt;
&lt;h2 id=&#34;补充&#34;&gt;补充&lt;/h2&gt;
&lt;p&gt;后来发现上面的更改的添加的&lt;code&gt;ENV&lt;/code&gt;不是必要的，这个只是用在编译的gcc版本和开发板的不对的时候用的，具体可以看&lt;a href=&#34;https://blog.csdn.net/qq_41115702/article/details/104655050&#34;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;编译及测试&#34;&gt;编译及测试&lt;/h1&gt;
&lt;p&gt;在驱动源码目录下执行&lt;code&gt;make&lt;/code&gt;即可，如果前面没有问题，那就可以看到&lt;code&gt;chrdevbase.ko&lt;/code&gt;了。&lt;/p&gt;
&lt;p&gt;后续的驱动测试就按参考一进行。&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qq_41753052/article/details/109138710&#34;&gt;嵌入式linux驱动开发-字符设备驱动&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qq_28576837/article/details/142790697&#34;&gt;加载驱动模块的两种方法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/weixin_42109053/article/details/124526066&#34;&gt;linux make modules 命令详解&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/cha1290878789/article/details/121453401&#34;&gt;Linux驱动——编译驱动的两种形式（内核目录外、内核目录中）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/Zander0/article/details/134871301&#34;&gt;Linux驱动安装遇到的问题（Kernel configuration is invalid）（Invalid module format）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/u011202336/article/details/9172095&#34;&gt;驱动编译错误 /bin/sh: scripts/mod/modpost&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qq_41115702/article/details/104655050&#34;&gt;编译内核驱动模块出错（error: asm/xxx: No such file or directory）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/daocaokafei/article/details/115472862&#34;&gt;Linux模块文件如何编译到内核和独立编译成模块？&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
- https://hxxxer.github.io/%E7%BC%96%E8%AF%91mini2440%E7%9A%84%E8%99%9A%E6%8B%9F%E5%AD%97%E7%AC%A6%E9%A9%B1%E5%8A%A8/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>C#获取dll中的图标</title>
        <link>https://hxxxer.github.io/net%E8%8E%B7%E5%8F%96dll%E4%B8%AD%E7%9A%84%E5%9B%BE%E6%A0%87/</link>
        <pubDate>Sat, 09 Nov 2024 16:24:42 +0800</pubDate>
        
        <guid>https://hxxxer.github.io/net%E8%8E%B7%E5%8F%96dll%E4%B8%AD%E7%9A%84%E5%9B%BE%E6%A0%87/</guid>
        <description>闲碎 https://hxxxer.github.io/net%E8%8E%B7%E5%8F%96dll%E4%B8%AD%E7%9A%84%E5%9B%BE%E6%A0%87/ -&lt;p&gt;&lt;strong&gt;最后编辑于2024年11月09日&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;前言&#34;&gt;前言&lt;/h1&gt;
&lt;p&gt;在搞那个快捷方式可视化的net程序时，因为图标列表第一个是百度网盘的图标，而文件夹没有指定图标，就默认第一个。结果就是一堆百度网盘😅。&lt;/p&gt;
&lt;p&gt;就算指定文件夹节点的图标索引为-1也还是这样，不知道为什么，所以就要搞一个文件夹图标。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;代码&#34;&gt;代码&lt;/h1&gt;
&lt;p&gt;主要是通过shell32 API的ExtractIcon函数来提取，然后文件夹图标的索引在shell32.dll里面是3。代码如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e78284&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#ca9ee6&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#e5c890&#34;&gt;ShellIcon&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8caaee&#34;&gt;    [DllImport(&amp;#34;shell32.dll&amp;#34;, CharSet = CharSet.Auto)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e78284&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#e78284&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#e78284&#34;&gt;extern&lt;/span&gt; IntPtr ExtractIcon(IntPtr hInst, &lt;span style=&#34;color:#e78284&#34;&gt;string&lt;/span&gt; lpszExeFileName, &lt;span style=&#34;color:#e78284&#34;&gt;int&lt;/span&gt; nIconIndex);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e78284&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#e78284&#34;&gt;static&lt;/span&gt; Icon? GetFolderIcon(&lt;span style=&#34;color:#e78284&#34;&gt;int&lt;/span&gt; index)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;// 从shell32.dll提取文件夹图标 (索引3是标准的关闭文件夹图标)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        IntPtr hIcon = ExtractIcon(IntPtr.Zero, &lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;shell32.dll&amp;#34;&lt;/span&gt;, index);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ca9ee6&#34;&gt;if&lt;/span&gt; (hIcon != IntPtr.Zero)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#ca9ee6&#34;&gt;return&lt;/span&gt; Icon.FromHandle(hIcon);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ca9ee6&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;null&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.......
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;// 添加文件夹图标&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Icon folderIcon = ShellIcon.GetFolderIcon(&lt;span style=&#34;color:#ef9f76&#34;&gt;3&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ca9ee6&#34;&gt;if&lt;/span&gt; (folderIcon != &lt;span style=&#34;color:#ef9f76&#34;&gt;null&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    imageList1.Images.Add(&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;folder&amp;#34;&lt;/span&gt;, folderIcon);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Claude&lt;del&gt;又是AI😋&lt;/del&gt;&lt;/p&gt;
&lt;/blockquote&gt;
- https://hxxxer.github.io/net%E8%8E%B7%E5%8F%96dll%E4%B8%AD%E7%9A%84%E5%9B%BE%E6%A0%87/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>NET使用Github Actions</title>
        <link>https://hxxxer.github.io/net%E4%BD%BF%E7%94%A8github-actions/</link>
        <pubDate>Fri, 08 Nov 2024 01:53:42 +0800</pubDate>
        
        <guid>https://hxxxer.github.io/net%E4%BD%BF%E7%94%A8github-actions/</guid>
        <description>闲碎 https://hxxxer.github.io/net%E4%BD%BF%E7%94%A8github-actions/ -&lt;p&gt;&lt;strong&gt;最后编辑于2024年11月09日&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;前言&#34;&gt;前言&lt;/h1&gt;
&lt;p&gt;早就知道GitHub actions很方便好用，所以我想搞一个。不过遇到了好多困难，现在基本搞定了，记录一下。&lt;/p&gt;
&lt;p&gt;主要的难点是yml文件的编写，毕竟是第一次接触，脑子有点混。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;新建工作流&#34;&gt;新建工作流&lt;/h1&gt;
&lt;p&gt;就直接在actions里面新建就行，GitHub有net desktop模板。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;yml文件的理解&#34;&gt;yml文件的理解&lt;/h1&gt;
&lt;p&gt;开头的on是指当发生什么的时候开始这条工作流，比如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ca9ee6&#34;&gt;on&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ca9ee6&#34;&gt;push&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ca9ee6&#34;&gt;tags&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - v*
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;就是在push且tag是以v开头时启动。注意push内的每个条件是或关系，只要满足一个就开始工作。&lt;/p&gt;
&lt;p&gt;然后就是具体工作内容，是一种多级列表，每一级都可以有多个。&lt;/p&gt;
&lt;p&gt;其实工作流程就是大概按顺序运行steps，这里大概是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;启动系统&lt;/li&gt;
&lt;li&gt;拉取仓库&lt;/li&gt;
&lt;li&gt;安装net core&lt;/li&gt;
&lt;li&gt;net项目初始化依赖&lt;/li&gt;
&lt;li&gt;构建release版本&lt;/li&gt;
&lt;li&gt;压缩成zip&lt;/li&gt;
&lt;li&gt;发布到release&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;感觉就像自动执行指令。&lt;/p&gt;
&lt;h2 id=&#34;steps属性理解&#34;&gt;steps属性理解&lt;/h2&gt;
&lt;p&gt;最末级就是steps，里面的属性有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;name&lt;/strong&gt;，就是名字。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;id&lt;/strong&gt;，非必要，其它地方引用时候用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;uses&lt;/strong&gt;，可以选择GitHub上现有的操作，比如获取仓库内容、安装net vore。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;with&lt;/strong&gt;，一般是使用uses时配置具体的参数，比如安装net core时指定版本。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;run&lt;/strong&gt;，就是执行指令，不同平台（win，Ubuntu）使用的不同&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;env&lt;/strong&gt;，一些变量，通过$env:&amp;lt;名字&amp;gt;，来引用。（好像在一些字符串里面不能被正确解析），比如：
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ca9ee6&#34;&gt;run&lt;/span&gt;: |&lt;span style=&#34;color:#737994&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994&#34;&gt;    $zipFilePath = &amp;#34;${{ github.workspace }}\$env:&amp;#34;&lt;/span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;发布到release&#34;&gt;发布到release&lt;/h2&gt;
&lt;p&gt;这边是重点，我是先搞了一个给这个action用的token，然后再在yml文件里面设定steps。&lt;/p&gt;
&lt;h3 id=&#34;token&#34;&gt;TOKEN&lt;/h3&gt;
&lt;h4 id=&#34;新建token&#34;&gt;&lt;del&gt;新建TOKEN&lt;/del&gt;&lt;/h4&gt;
&lt;p&gt;在头像 - &lt;strong&gt;setting&lt;/strong&gt; - 侧边栏的&lt;strong&gt;Developer Settings&lt;/strong&gt; - 侧边栏的&lt;strong&gt;Personal accesskey tokens&lt;/strong&gt; - &lt;strong&gt;Token (classic)&lt;/strong&gt;。然后&lt;strong&gt;generate new token&lt;/strong&gt; - &lt;strong&gt;Generate new token (classic)&lt;/strong&gt;。然后输密码之后，来到新建token的页面，名字随便起，过期时间随便，下面是&lt;strong&gt;Select scopes&lt;/strong&gt;选择前三个。
**
新建完成之后记得复制token，因为只会出现一次，后面要用。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hxxxer.github.io/images/%E9%80%89%E6%8B%A9token%E7%B1%BB%E5%9E%8B.png&#34; alt=&#34;选择token类型&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hxxxer.github.io/images/%E6%96%B0%E5%BB%BAtoken.png&#34; alt=&#34;新建token&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;新建secrets&#34;&gt;&lt;del&gt;新建secrets&lt;/del&gt;&lt;/h4&gt;
&lt;p&gt;刚刚的token要保存到项目的secrets里面。secrets是一种可以在yml里面调用的变量，但是无法得知内容。&lt;/p&gt;
&lt;p&gt;打开项目的&lt;strong&gt;setting&lt;/strong&gt; - 侧边栏的&lt;strong&gt;Secrets and variables&lt;/strong&gt; - &lt;strong&gt;Actions&lt;/strong&gt;。然后选择绿色的&lt;strong&gt;New repository secret&lt;/strong&gt;。接下来就是新建页面，名字随便，记住就行，secret就填刚刚的token。然后保存就行。&lt;/p&gt;
&lt;p&gt;但是还没完，还要配置项目的权限。打开项目的&lt;strong&gt;setting&lt;/strong&gt; - 侧边栏的&lt;strong&gt;Actions&lt;/strong&gt; - &lt;strong&gt;General&lt;/strong&gt;，找到&lt;strong&gt;Workflow permission&lt;/strong&gt;，选择第一个Read and write permissions。到这里就完成了。&lt;/p&gt;
&lt;h4 id=&#34;补充&#34;&gt;补充&lt;/h4&gt;
&lt;p&gt;后来发现不用新建，直接在发布的&lt;code&gt;with: token&lt;/code&gt;里用&lt;code&gt;${{ secrets.GITHUB_TOKEN }}&lt;/code&gt;就行😂。&lt;/p&gt;
&lt;h3 id=&#34;在yml文件设定发布&#34;&gt;在yml文件设定发布&lt;/h3&gt;
&lt;p&gt;这里我是使用别人的actions和网友的模板：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#ca9ee6&#34;&gt;name&lt;/span&gt;: Create and Upload Release
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ca9ee6&#34;&gt;uses&lt;/span&gt;: softprops/action-gh-release@v2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ca9ee6&#34;&gt;if&lt;/span&gt;: startsWith(github.ref, &amp;#39;refs/tags/&amp;#39;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ca9ee6&#34;&gt;with&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ca9ee6&#34;&gt;token&lt;/span&gt;: ${{ secrets.PB_TOKEN }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ca9ee6&#34;&gt;tag_name&lt;/span&gt;: ${{ github.ref_name }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ca9ee6&#34;&gt;name&lt;/span&gt;: Release ${{ github.ref_name }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ca9ee6&#34;&gt;body&lt;/span&gt;: 船新版本！
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ca9ee6&#34;&gt;makelatest&lt;/span&gt;: &lt;span style=&#34;color:#ef9f76&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ca9ee6&#34;&gt;draft&lt;/span&gt;: &lt;span style=&#34;color:#ef9f76&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ca9ee6&#34;&gt;prerelease&lt;/span&gt;: &lt;span style=&#34;color:#ef9f76&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ca9ee6&#34;&gt;files&lt;/span&gt;: |&lt;span style=&#34;color:#737994&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994&#34;&gt;      HugoHelper.zip&lt;/span&gt;      
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;github.ref_name&lt;/code&gt;就是上传连接的名字，比如我是限制在tags前缀是v时启动工作流，那这里就是v&amp;hellip;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;name&lt;/code&gt;和&lt;code&gt;tag_name&lt;/code&gt;顾名思义，&lt;code&gt;name&lt;/code&gt;就是这次发布的名字，&lt;code&gt;tag_name&lt;/code&gt;就是发布的tag的名字。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;makelatest&lt;/code&gt;就是让这次发布设置为项目的最新release。&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/m0_74075298/article/details/141230617&#34;&gt;Github Actions自动发布release&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000045270503&#34;&gt;学会Github Actions自动发布版本&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://cloud.tencent.com/developer/article/1970730&#34;&gt;GitHub Action 自动构建 并release&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://juejin.cn/post/6908427616298991629&#34;&gt;GitHub Actions - 使用 tag 作为发布的版本号&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cjavapy.com/article/328/&#34;&gt;.NET Core项目提示找不到project.assets.json文件&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
- https://hxxxer.github.io/net%E4%BD%BF%E7%94%A8github-actions/ - This is a customized copyright.</description>
        </item>
    
    
  </channel>
</rss> 